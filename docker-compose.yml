version: '3'

services:
  api: # Node.js App
    container_name: mp-api
    build: .
    ports:
      - "4020:4060" # Expose API port
      - "9229:9229" # Expose Node process debug port (disable in production)
    environment: # Set ENV vars
      - NODE_ENV=local
      - ES_HOST=elasticsearch
      - MDB_HOST=mongodb
      - PORT=4060

  frontend: # Nginx Server For Frontend app
    container_name: mp-frontend
    image: nginx
    ports:
      - "4048:4040"
    volumes: # Server local "public" directory
      - ./public:/usr/share/nginx/html

  mongodb:
    container_name: mp-mdb
    image: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mathadmin
      - MONGO_INITDB_ROOT_PASSWORD=mathadmin
    volumes:
      - /data/mdb:/data/db

  elasticsearch: # Elasticsearch Instance
    container_name: mp-search
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.3
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports: # Expose Elasticsearch ports
      - "9300:9300"
      - "9200:9200"
    volumes: # Persist ES data in separate "esdata" volume
      - /data/esdata:/usr/share/elasticsearch/data

  kibana: # Kibana Instance
    container_name: mp-kibana
    image: docker.elastic.co/kibana/kibana:6.2.3
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml

  neo4j:
    container_name: mp-neo4j
    image: neo4j:3.4
    environment:
      - NEO4J_AUTH=none
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - /data/neo4j/data:/data
      - /data/neo4j/logs:/logs
      - /data/neo4j/plugins:/plugins
      - /data/neo4j/conf:/conf
